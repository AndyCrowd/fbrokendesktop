#!/bin/bash
##Version 2.0.1
#
#License: GPL2
#
#Author: Andy Crowd
#Tested in Arch Linux
#Search for Broken Exec in *.desktop
#Thanks to grail LQ Guru for helping to simplify code

#changelog Sat, 13 Aug 2022 23:01:43 +0000
# [hatkidchan] rewrote awk-script to be able to handle quotes in Exec= path,
# as well as made script easier to read in general

path_list=(
  # System-wide applications
  "/usr/share/applications"
  "/usr/local/share/applications"

  # Per-user applications
  "$HOME/.local/share/applications"
  "$HOME/Desktop"

  # DE-specific paths
  "/usr/etc/xdg/autostart"
  "/usr/share/mimelnk/application"
  "/usr/share/mimelnk/chemical"
  "/usr/lib/libreoffice/share/xdg"
  "/usr/share/xsessions"
  "/usr/share/apps/kdm/sessions"
  "/usr/share/wayland-sessions"
  "/usr/share/apps/kdm/programs"
  "/usr/share/mate/wm-properties"

  # Autostart
  "/etc/xdg/autostart"
  "/usr/share/gdm/greeter/autostart"
  "/usr/share/gnome/autostart"
  "$HOME/.config/autostart"
  "$XDG_CONFIG_DIRS/autostart"
  "$XDG_CONFIG_HOME/autostart"
);

if [ "$#" -ne 0 ]; then
  # FIXME: is there a better way to do that?
  path_list=()
  for path in "$@"; do
    path_list+=("$path")
  done;
fi

for fdPath in "${path_list[@]}"; do
  if [[ -d "$fdPath" || -f "$fdPath" ]]; then

    find "$fdPath" -type f -iname "*.desktop" -exec awk -v filename="{}" "
    function check_if_exists(path) {
    # NOTE: this is still quite error-prone. for example, it may die when
    # NOTE: you use single quotes in file name. It's not a good idea to do that
    # NOTE: anyways, but same with spaces. Yet someone still does that!
    if (system(\"which '\"path\"' 2>/dev/null >/dev/null\") != 0)
      print path\" \"filename\" at line \"NR
    }

    {
      if (match(\$0, \"^Exec=\\\"[^\\\"]+\\\"\") != 0)
        # 6 - character after first quote
        # 7 - length of string without exec and quotes
        check_if_exists(substr(\$0, RSTART + 6, RLENGTH - 7));
      else if (match(\$0, \"^Exec=[^ ]+\") != 0)
        # 5 - length of Exec=
        check_if_exists(substr(\$0, RSTART + 5, RLENGTH - 5));
    }" "{}" \;
  fi
done
